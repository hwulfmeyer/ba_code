    |          Population Average          |           Best Individual            |
---- -------------------------------------- -------------------------------------- ----------
Gen  Length       Kommenda     Fitness        Length       Kommenda     Fitness        Time Left    Front Size
0    3.933e+01    1.694e+14    1.783e+14      2.100e+01    4.600e+01    2.144e-01      4.53s        0         
1    1.761e+01    1.048e+15    1.700e+05      1.000e+00    1.000e+00    1.171e-01      2.75s        0         
2    1.007e+01    2.878e+05    1.016e+04      1.000e+00    1.000e+00    1.171e-01      1.98s        0         
3    8.805e+00    2.297e+04    3.052e+03      1.100e+01    8.000e+01    8.108e-02      1.38s        0         
4    5.543e+00    1.101e+04    2.097e+04      1.100e+01    8.000e+01    8.108e-02      1.04s        0         
5    3.050e+00    2.333e+05    1.137e+03      1.100e+01    8.000e+01    8.108e-02      0.70s        0         
6    3.268e+00    5.005e+02    2.551e+03      1.100e+01    8.000e+01    8.108e-02      0.81s        0         
7    4.838e+00    3.432e+03    5.764e+03      1.100e+01    8.000e+01    8.108e-02      0.48s        0         
8    7.888e+00    2.912e+14    1.259e+04      1.100e+01    8.000e+01    8.108e-02      0.24s        0         
9    9.432e+00    6.518e+03    3.649e+04      1.500e+01    1.200e+02    7.430e-02      0.00s        0         
10   9.477e+00    1.930e+03    1.123e+04      1.500e+01    1.200e+02    7.430e-02      2.31s        0         
11   9.188e+00    3.470e+06    6.977e+03      1.500e+01    1.200e+02    7.430e-02      2.11s        0         
12   8.830e+00    4.052e+03    2.710e+06      1.500e+01    1.200e+02    7.430e-02      1.76s        0         
13   9.815e+00    5.679e+05    8.130e+06      1.100e+01    4.000e+01    7.383e-02      1.55s        0         
14   1.104e+01    4.693e+02    8.130e+06      1.700e+01    1.800e+02    6.234e-02      2.00s        0         
15   1.321e+01    3.275e+12    6.712e+07      1.700e+01    1.800e+02    6.234e-02      1.27s        0         
16   1.472e+01    5.260e+03    4.535e+07      1.700e+01    1.800e+02    5.575e-02      0.98s        0         
17   1.518e+01    3.445e+04    1.953e+07      1.700e+01    1.800e+02    5.575e-02      0.71s        0         
18   1.566e+01    2.071e+05    1.863e+07      2.100e+01    4.200e+02    4.762e-02      0.33s        0         
19   1.611e+01    4.158e+07    2.100e+07      2.100e+01    4.200e+02    4.762e-02      0.00s        0         
20   1.840e+01    1.410e+05    8.130e+06      2.100e+01    4.200e+02    4.762e-02      3.60s        0         
21   1.928e+01    2.413e+03    2.372e+07      4.700e+01    3.200e+03    4.124e-02      2.42s        0         
22   2.008e+01    2.336e+04    1.626e+07      4.900e+01    3.600e+03    3.975e-02      2.18s        0         
23   2.205e+01    1.636e+09    5.420e+06      4.900e+01    3.600e+03    3.975e-02      2.14s        0         
24   2.378e+01    6.144e+05    5.420e+06      4.900e+01    3.600e+03    3.975e-02      1.67s        0         
25   2.600e+01    1.760e+05    1.676e+07      4.500e+01    2.400e+03    3.739e-02      1.36s        0         
26   3.145e+01    2.237e+07    6.275e+06      7.900e+01    1.856e+04    3.224e-02      1.17s        0         
27   3.796e+01    6.040e+04    1.160e+07      7.900e+01    1.856e+04    3.224e-02      0.84s        0         
28   4.618e+01    6.754e+05    1.044e+07      7.700e+01    1.862e+04    2.728e-02      0.47s        0         
29   5.845e+01    6.047e+06    2.841e+02      1.110e+02    6.512e+04    2.548e-02      0.00s        0         





Time: 0h:0m:9s
####   Data for the best program   ####
Best Program: div(div(X0, X0), add(sub(sub(X0, mul(0.121, add(sub(sub(mul(X1, mul(X2, X0)), mul(0.121, 0.799)), div(div(X0, X0), add(sub(sub(X0, mul(0.121, add(sub(sub(X0, mul(0.121, 0.799)), div(div(X0, X0), add(sub(sub(X0, 0.121), X0), add(div(0.806, 0.816), X2)))), add(X2, X1)))), X0), add(1.173, X2)))), add(X2, X1)))), X0), add(sub(sub(X0, mul(0.121, add(sub(sub(X0, mul(0.121, 0.799)), div(div(X0, X0), add(sub(sub(X0, mul(0.121, add(1.921, X1))), sub(X0, sub(add(X3, mul(mul(X1, X1), X2)), X3))), add(1.173, X2)))), add(X2, X1)))), X0), add(1.173, X2))))
Best Program Infix: ((X0/X0)/(((X0-(0.12062748533909586*((((X1*(X2*X0))-(0.12062748533909586*0.7985313941992463))-((X0/X0)/(((X0-(0.12062748533909586*(((X0-(0.12062748533909586*0.7985313941992463))-((X0/X0)/(((X0-0.12062748533909586)-X0)+((0.8062749195704197/0.8164630444315184)+X2))))+(X2+X1))))-X0)+(1.1725504437810508+X2))))+(X2+X1))))-X0)+(((X0-(0.12062748533909586*(((X0-(0.12062748533909586*0.7985313941992463))-((X0/X0)/(((X0-(0.12062748533909586*(1.9205560579753995+X1)))-(X0-((X3+((X1*X1)*X2))-X3)))+(1.1725504437810508+X2))))+(X2+X1))))-X0)+(1.1725504437810508+X2))))
Best Program Complexity: 111
Raw Fitness: 0.025478355205809364
Penalized Fitness: 0.03324835520580936
Estimator		Train-rmse: 0.025478355205809364	Test-rmse: 0.026193960585750947	Test-R^2: 0.9273527901755797

{'complexity': 'length', 'const_range': (1e-10, 2.0), 'elitism_size': 1, 'function_set': ('add', 'sub', 'div', 'mul'), 'generations': 30, 'gs_mutationstep': 0.001, 'init_depth': (3, 6), 'init_method': 'half and half', 'low_memory': True, 'max_samples': 1.0, 'metric': 'rmse', 'n_jobs': 1, 'p_crossover': 0.5, 'p_gs_crossover': 0.0, 'p_gs_mutation': 0.0, 'p_hoist_mutation': 0.0, 'p_point_mutation': 0.25, 'p_point_replace': 0.05, 'p_subtree_mutation': 0.25, 'paretogp': False, 'paretogp_lengths': (5, 160), 'parsimony_coefficient': 7e-05, 'population_size': 800, 'random_state': 797446139, 'selection': 'tournament', 'stopping_criteria': 1e-10, 'tournament_size': 11, 'verbose': 1, 'warm_start': True}
